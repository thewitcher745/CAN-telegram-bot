- # TODO Add view client info to client manager (Probably use __repr__ in Client class)

- # TODO Group account type selection buttons in separate nested class

- ## TODO Convert clients from dicts to python objects for easier management

- # TODO Fix the Exchange class bug where you have to instantiate the class before calling methods!

- # TODO Implement a bot that can manage this bot

- # TODO Add uuid to client

- # TODO Add exchange type to the clients in the list in client manager / portfolio

- # TODO Encrypt client data storage

- # TODO Change handler function names for consistency (get for user input, select for callback queries)

- # TODO Do much better commenting on the code

# Done
________________________________________
+ Update exchange api checker to output each individual client separately
+ Find a way to organize the user_handler_functions file]
+ Add individual end handlers to conversations
+ Add back functionality to conversations
+ Separate end_operation commands for different conversations
+ Sort functions in *_handler_functions.py files, handlers.py and utils.py
+ For every manual input, add error handling (add client done)
+ Add exchange selection to client creation menu
+ Put new client data into separate object ("new_client") instead of storing each key in the outer dict scope
+ Add exchange amd account type editing to edit_client
+ Consider saving the EXCHANGE object alongside the user data when adding/editing a client
+ For every manual input, add error handling

# Canceled
________________________________________
* Update defaultname when creating client to be based on exchange name